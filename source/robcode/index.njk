--- 
title: Rings of Bytes code 
collection: pages 
tags: barcode,generator,svg output, art, encoder
permalink: robcode 
--- 
{% extends "layouts/tool.html" %} 
{% import "layouts/inputs.html" as inputs %}
{% block tool %}
{{ inputs.textareafield(name="inputtext", label="Input", rows=input.rows, value=input.placeholder) }}
<br>
<div class="form-group">

  <button class="btn btn-secondary" type="button" data-toggle="collapse" data-target="#advanced-options" aria-expanded="false" aria-controls="advanced-options">
    Advanced
  </button>
</div>
<div class="collapse form-group" id="advanced-options">
  <div class="form-group">
    <input type="checkbox" id="exponential">Exponential
    <select name="step_size" >
      {%- for i in range(0, 8) %}
      <option value="{{ i }}" {% if i==2 %}selected{% endif %}>{{ i }}</option>
      {%- endfor %}
    </select> Step Size (or Base) 
  </div>
  <div class="form-group">
    start at Ring
    <input type="text" size="5" name="start_ring" value="1">
  </div>
  <div class="form-group">
    <input type="text" width="16" name="xor_text" value="0xAA">
    <input type="checkbox" id="xor" checked="true" >XOR (0b for binary, 0a for a Character, 0x for Hex)
  </div>
  <div class="form-group">
    Ring Width
    <input type="text" size="3" name="ring_width" value="20"> Bytes per Sector
    <input type="text" size="5" name="bytes_per_sector" value="1">
  </div>
  <div class="form-group">
    <select class="form-control" id="center" name="center">
      <option value="no_center" checked>No Center</option>
      <option value="center_circle">Solid</option>
      <option value="ring">Ring</option>
      <option value="double_circle">Circle with Ring</option>
      <option value="center_byte">Center Byte</option>
    </select>
    <input type="text" size="12" name="center_byte_text" value="0xAA">
  </div>
  <br>
  <select class="form-control" name="bit_order">
    <option value="lsb" >LSB</option>
    <option value="msb" checked >MSB</option>
  </select>
  <select class="form-control" name="parity">
    <option value="even" checked>Even Parity</option>
    <option value="odd">Odd Parity</option>
    <option value="none">No Parity</option>
    <option value="mark">Mark</option>
    <option value="space">Space</option>
  </select>
  <br>
  <input type="checkbox" id="counter_clockwise" >Counter Clockwise
  <input type="checkbox" id="bounding_circle" checked="true" >Bounding Circle
  <input type="checkbox" id="unroll" >Unroll
  <br>
  <br>
  <div class="form-group">
    <div class="input-group">
      <div class="input-group-prepend">
        <div class="input-group-text">
          <input type="checkbox" id="color" aria-label="Enable colors">
        </div>
      </div>
      <div class="input-group-append">
        {% for i in range(0, 8) %}
        {# <div class="input-group-text"> #}
          <input class="form-control" style="padding: initial; width: 1.5rem; height: 100%;" type="color" id="table1_cell_color_{{ i }}" onchange="set_color(this);">
        {# </div> #}
        {% endfor %}
        {# <div class="">     #}
          <button class="btn btn-secondary" type="button" value="reverse" onClick="reverse_colors()">Reverse</button>
        {# </div> #}
      </div>
    </div>
  </div>
</div>
<br>
<div class="form-group">
  <button class="btn btn-primary" type="button" id="draw" name="draw">Generate</button>
  <div class="form-check">
        <input class="form-check-input" type="checkbox" id="live">
        <label class="form-check-label" for="live">
          live output (might lag)
      </label>
  </div>
</div>

<div align="left" class="form-group">
  <label for="outputsvg">Output</label>
  <svg class="form-control border rounded" name="outputsvg" id="outputsvg" width="100%">
  </svg>
</div>
{% endblock %} 
{% block scripts %}
<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>

<script defer src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
<script defer type="text/javascript" src="robcode.js"></script>
<script defer type="text/javascript">
  // init()
  var the_form = document.getElementById('tool-form')
  document.getElementById('draw').onclick = function() {
    encode_text(the_form)
  }

   document.getElementById("live").onchange = function () {
        if (this.checked) {
            document.getElementById("inputtext").oninput = document.getElementById("draw").onclick
        } else {
            document.getElementById("inputtext").oninput = null
        } 
    }
    document.getElementById("live").onchange()

    document.getElementById("inputtext")
        .addEventListener("keyup", function(event) {
        event.preventDefault();
        if ((event.keyCode === 13) && event.ctrlKey) {
            document.getElementById("draw").click();
        }
    })

  window.onload = function() {
    init()
  }
</script>

{% endblock %} 

{% block references %}
<ul>
  <li><a href="https://en.wikipedia.org/wiki/ShotCode">ShotCode - Wikipedia</a></li>
  <li><a href="https://github.com/rbur004/svg_rob_code">Original ROB code Implementation - Rob Burrowes</a></li>
  <li><a href="https://www.reddit.com/r/Overwatch/comments/4w7ey1/the_sombra_skysong/">SkySong</a></li>
</ul>
{% endblock %}